name: Deploy POC

on:
  workflow_dispatch:
    inputs:
      resourcePrefix:
        default: 'contoso'
        required: true
        description: 'Resource Prefix'
      clusterName:
        default: 'aks'
        required: true
        description: 'Name of the AKS Cluster'
      aksAdminGroupIds:
        required: false
        description: 'Comma-separated list of AAD group IDs'
      location:
        required: true
        type: choice
        description: 'Resource Location'
        default: westus2
        options:
          - westus2
          - canadacentral
      
jobs:
  deploy-poc:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Generate Resource Group Name
        id: generate
        run: |
          let "randomIdentifier=$RANDOM*$RANDOM"
          echo "randomIdentifier=$randomIdentifier" >> $GITHUB_ENV 
          echo "resourceGroupName=poc-autoscaling-gh-$randomIdentifier" >> $GITHUB_ENV

      - name: Parse AAD Group IDs to Json
        id: parse
        env:
          AKS_ADMIN_GROUP_IDS: ${{ github.event.inputs.aksAdminGroupIds }}
        run: |
          adGroupIds=$(echo $AKS_ADMIN_GROUP_IDS | tr "," "\n")
          adGroupIdsJson=$(jq -n --arg inarr "${adGroupIds}" '$inarr | split("\n")' --compact-output)
          echo $adGroupIdsJson > $GITHUB_WORKSPACE/adGroupIds.json

      - name: Login to Azure
        id: login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Validate Bicep Templates
        id: validate
        uses: Azure/cli@v1
        env:
          DEPLOY_LOCATION: ${{ github.event.inputs.location }}
          RANDOM_IDENTIFIER: ${{ env.randomIdentifier }}
          NODE_ADMIN_PASSWORD: ${{ secrets.NODE_ADMIN_PASSWORD }}
        with:
          inlineScript: |
            az deployment sub validate \
              --name poc-deployment-$RANDOM_IDENTIFIER \
              --template-file ./deploy/aks/main.bicep \
              --location $DEPLOY_LOCATION \
              --parameters resourcePrefix=${{ github.event.inputs.resourcePrefix }} \
              --parameters resourceGroupName=${{ env.resourceGroupName }} \
              --parameters clusterName=${{ github.event.inputs.clusterName }} \
              --parameters adminGroupObjectIDs=@$GITHUB_WORKSPACE/adGroupIds.json \
              --parameters nodeAdminPassword=$NODE_ADMIN_PASSWORD

      - name: Run a Dry-Run Deployment
        id: dryrun
        uses: Azure/cli@v1
        env:
          DEPLOY_LOCATION: ${{ github.event.inputs.location }}
          RANDOM_IDENTIFIER: ${{ env.randomIdentifier }}
          NODE_ADMIN_PASSWORD: ${{ secrets.NODE_ADMIN_PASSWORD }}
        with:
          inlineScript: |
            az deployment sub create \
              --name poc-deployment-$RANDOM_IDENTIFIER \
              --template-file ./deploy/aks/main.bicep \
              --location $DEPLOY_LOCATION \
              --parameters resourcePrefix=${{ github.event.inputs.resourcePrefix }} \
              --parameters resourceGroupName=${{ env.resourceGroupName }} \
              --parameters clusterName=${{ github.event.inputs.clusterName }} \
              --parameters adminGroupObjectIDs=@$GITHUB_WORKSPACE/adGroupIds.json \
              --parameters nodeAdminPassword=$NODE_ADMIN_PASSWORD \
              --what-if
      - name: Deploy AKS
        id: deploy
        env:
          DEPLOY_LOCATION: ${{ github.event.inputs.location }}
          RANDOM_IDENTIFIER: ${{ env.randomIdentifier }}
          NODE_ADMIN_PASSWORD: ${{ secrets.NODE_ADMIN_PASSWORD }}
        run: |
          az deployment sub create \
              --name poc-deployment-$RANDOM_IDENTIFIER \
              --template-file ./deploy/aks/main.bicep \
              --location $DEPLOY_LOCATION \
              --parameters resourcePrefix=${{ github.event.inputs.resourcePrefix }} \
              --parameters resourceGroupName=${{ env.resourceGroupName }} \
              --parameters clusterName=${{ github.event.inputs.clusterName }} \
              --parameters adminGroupObjectIDs=@$GITHUB_WORKSPACE/adGroupIds.json \
              --parameters nodeAdminPassword=$NODE_ADMIN_PASSWORD

          echo "::set-output name=clusterName::$(az deployment sub show -n poc-deployment-$RANDOM_IDENTIFIER --query properties.outputs.clusterName.value)"
      
      - name: Configure Actions Runner Controller
        env:
          CLUSTER_NAME: ${{ steps.deploy.outputs.clusterName }}
          RESOURCE_GROUP: ${{ env.resourceGroupName }}
        run: |
          az aks get-credentials --admin --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP
          helm repo add jetstack https://charts.jetstack.io
          helm repo add actions-runner-controller https://actions-runner-controller.github.io/actions-runner-controller
          helm repo update
          helm install \
                cert-manager jetstack/cert-manager \
                --namespace cert-manager \
                --create-namespace \
                --version v1.8.0 \
                --set installCRDs=true          
          helm upgrade --install --namespace actions-runner-system --create-namespace \
                       --wait actions-runner-controller actions-runner-controller/actions-runner-controller
      
      # - name: Destroy AKS
      #   if: ${{ failure() && steps.deploy.conclusion == 'failure' }}
      #   uses: Azure/cli@v1
      #   env:
      #     RANDOM_IDENTIFIER: ${{ env.randomIdentifier }}
      #   with:
      #     inlineScript: |
      #       az deployment sub delete \
      #         --name poc-deployment-$RANDOM_IDENTIFIER

